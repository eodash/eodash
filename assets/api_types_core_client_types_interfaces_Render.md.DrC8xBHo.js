import{_ as o,c as t,o as a,ag as r}from"./chunks/framework.DQA5mTKy.js";const m=JSON.parse('{"title":"Interface: Render","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/core/client/types/interfaces/Render.md","filePath":"api/types/core/client/types/interfaces/Render.md"}'),n={name:"api/types/core/client/types/interfaces/Render.md"};function s(i,e,c,d,l,p){return a(),t("div",null,[...e[0]||(e[0]=[r('<p><a href="./../../../../../">@eodash/eodash</a> / <a href="./../">types/core/client/types</a> / Render</p><h1 id="interface-render" tabindex="-1">Interface: Render <a class="header-anchor" href="#interface-render" aria-label="Permalink to &quot;Interface: Render&quot;">​</a></h1><p>Defined in: dist/types/core/client/types.d.ts:395</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="assets" tabindex="-1">assets <a class="header-anchor" href="#assets" aria-label="Permalink to &quot;assets&quot;">​</a></h3><blockquote><p><strong>assets</strong>: <code>string</code>[]</p></blockquote><p>Defined in: dist/types/core/client/types.d.ts:397</p><p>REQUIRED. Array of asset keys referencing the assets that are used to make the rendering</p><hr><h3 id="color-formula" tabindex="-1">color_formula? <a class="header-anchor" href="#color-formula" aria-label="Permalink to &quot;color\\_formula?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>color_formula</strong>: <code>string</code></p></blockquote><p>Defined in: dist/types/core/client/types.d.ts:409</p><p>Color formula that must be applied for a raster band</p><hr><h3 id="colormap" tabindex="-1">colormap? <a class="header-anchor" href="#colormap" aria-label="Permalink to &quot;colormap?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>colormap</strong>: <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p></blockquote><p>Defined in: dist/types/core/client/types.d.ts:407</p><p>Color map JSON definition that must be applied for a raster band</p><hr><h3 id="colormap-name" tabindex="-1">colormap_name? <a class="header-anchor" href="#colormap-name" aria-label="Permalink to &quot;colormap\\_name?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>colormap_name</strong>: <code>string</code></p></blockquote><p>Defined in: dist/types/core/client/types.d.ts:405</p><p>Color map identifier that must be applied for a raster band</p><hr><h3 id="expression" tabindex="-1">expression? <a class="header-anchor" href="#expression" aria-label="Permalink to &quot;expression?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>expression</strong>: <code>string</code></p></blockquote><p>Defined in: dist/types/core/client/types.d.ts:413</p><p>Band arithmetic formula to apply to the referenced assets.</p><hr><h3 id="minmax-zoom" tabindex="-1">minmax_zoom? <a class="header-anchor" href="#minmax-zoom" aria-label="Permalink to &quot;minmax\\_zoom?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>minmax_zoom</strong>: <code>number</code>[]</p></blockquote><p>Defined in: dist/types/core/client/types.d.ts:415</p><p>Zoom levels range applicable for the visualization</p><hr><h3 id="nodata" tabindex="-1">nodata? <a class="header-anchor" href="#nodata" aria-label="Permalink to &quot;nodata?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>nodata</strong>: <code>string</code> | <code>number</code></p></blockquote><p>Defined in: dist/types/core/client/types.d.ts:403</p><p>Nodata value to use for the referenced assets.</p><hr><h3 id="resampling" tabindex="-1">resampling? <a class="header-anchor" href="#resampling" aria-label="Permalink to &quot;resampling?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>resampling</strong>: <code>string</code></p></blockquote><p>Defined in: dist/types/core/client/types.d.ts:411</p><p>Resampling algorithm to apply to the referenced assets. See GDAL resampling algorithm for some examples.</p><hr><h3 id="rescale" tabindex="-1">rescale? <a class="header-anchor" href="#rescale" aria-label="Permalink to &quot;rescale?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>rescale</strong>: <code>number</code>[][]</p></blockquote><p>Defined in: dist/types/core/client/types.d.ts:401</p><p>2 dimensions array of delimited Min,Max range per band. If not provided, the data will not be rescaled.</p><hr><h3 id="title" tabindex="-1">title? <a class="header-anchor" href="#title" aria-label="Permalink to &quot;title?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>title</strong>: <code>string</code></p></blockquote><p>Defined in: dist/types/core/client/types.d.ts:399</p><p>Optional title of the rendering</p>',53)])])}const u=o(n,[["render",s]]);export{m as __pageData,u as default};
