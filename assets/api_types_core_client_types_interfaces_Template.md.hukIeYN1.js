import{_ as t,c as a,o,ag as d}from"./chunks/framework.QYKR7UOp.js";const g=JSON.parse('{"title":"Interface: Template","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/core/client/types/interfaces/Template.md","filePath":"api/types/core/client/types/interfaces/Template.md"}'),r={name:"api/types/core/client/types/interfaces/Template.md"};function i(s,e,n,p,c,l){return o(),a("div",null,[...e[0]||(e[0]=[d('<p><a href="./../../../../../">@eodash/eodash</a> / <a href="./../">types/core/client/types</a> / Template</p><h1 id="interface-template" tabindex="-1">Interface: Template <a class="header-anchor" href="#interface-template" aria-label="Permalink to &quot;Interface: Template&quot;">​</a></h1><p>Defined in: dist/types/core/client/types.d.ts:228</p><p>Dashboard rendered widgets specification. 3 types of widgets are supported: <code>&quot;iframe&quot;</code>, <code>&quot;internal&quot;</code>, and <code>&quot;web-component&quot;</code>. A specific object should be provided based on the type of the widget.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="background" tabindex="-1">background? <a class="header-anchor" href="#background" aria-label="Permalink to &quot;background?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>background</strong>: <a href="./../type-aliases/BackgroundWidget.html"><code>BackgroundWidget</code></a></p></blockquote><p>Defined in: dist/types/core/client/types.d.ts:237</p><p>Widget rendered as the dashboard background. Has the same specifications of <a href="./../type-aliases/Widget.html">Widget</a> without the <code>title</code> and <code>layout</code> properties</p><hr><h3 id="gap" tabindex="-1">gap? <a class="header-anchor" href="#gap" aria-label="Permalink to &quot;gap?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>gap</strong>: <code>number</code></p></blockquote><p>Defined in: dist/types/core/client/types.d.ts:230</p><p>Gap between widgets</p><hr><h3 id="loading" tabindex="-1">loading? <a class="header-anchor" href="#loading" aria-label="Permalink to &quot;loading?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>loading</strong>: <a href="./../type-aliases/BackgroundWidget.html"><code>BackgroundWidget</code></a></p></blockquote><p>Defined in: dist/types/core/client/types.d.ts:232</p><p>Loading widget</p><hr><h3 id="widgets" tabindex="-1">widgets <a class="header-anchor" href="#widgets" aria-label="Permalink to &quot;widgets&quot;">​</a></h3><blockquote><p><strong>widgets</strong>: <a href="./../type-aliases/Widget.html"><code>Widget</code></a>[]</p></blockquote><p>Defined in: dist/types/core/client/types.d.ts:239</p><p>Array of widgets that will be rendered as dashboard panels.</p>',24)])])}const u=t(r,[["render",i]]);export{g as __pageData,u as default};
