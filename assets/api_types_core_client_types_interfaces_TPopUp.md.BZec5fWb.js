import{_ as o,c as t,o as a,ag as r}from"./chunks/framework.r-SdhhLy.js";const m=JSON.parse('{"title":"Interface: TPopUp","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/core/client/types/interfaces/TPopUp.md","filePath":"api/types/core/client/types/interfaces/TPopUp.md"}'),d={name:"api/types/core/client/types/interfaces/TPopUp.md"};function i(c,e,p,n,s,l){return a(),t("div",null,e[0]||(e[0]=[r('<p><a href="./../../../../../">@eodash/eodash</a> / <a href="./../">types/core/client/types</a> / TPopUp</p><h1 id="interface-tpopup" tabindex="-1">Interface: TPopUp <a class="header-anchor" href="#interface-tpopup" aria-label="Permalink to &quot;Interface: TPopUp&quot;">​</a></h1><p>Defined in: dist/types/core/client/types.d.ts:137</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><blockquote><p><strong>name</strong>: <code>&quot;PopUp&quot;</code></p></blockquote><p>Defined in: dist/types/core/client/types.d.ts:138</p><hr><h3 id="properties-1" tabindex="-1">properties? <a class="header-anchor" href="#properties-1" aria-label="Permalink to &quot;properties?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>properties</strong>: <code>Partial</code>&lt;{ }&gt; &amp; <code>Omit</code>&lt;<code>object</code> &amp; <code>VNodeProps</code> &amp; <code>AllowedComponentProps</code> &amp; <code>ComponentCustomProps</code>, <code>never</code>&gt; &amp; <code>object</code></p></blockquote><p>Defined in: dist/types/core/client/types.d.ts:139</p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><h5 id="height" tabindex="-1">height? <a class="header-anchor" href="#height" aria-label="Permalink to &quot;height?&quot;">​</a></h5><blockquote><p><code>readonly</code> <code>optional</code> <strong>height</strong>: <code>string</code></p></blockquote><h5 id="maxheight" tabindex="-1">maxHeight? <a class="header-anchor" href="#maxheight" aria-label="Permalink to &quot;maxHeight?&quot;">​</a></h5><blockquote><p><code>readonly</code> <code>optional</code> <strong>maxHeight</strong>: <code>string</code></p></blockquote><h5 id="maxwidth" tabindex="-1">maxWidth? <a class="header-anchor" href="#maxwidth" aria-label="Permalink to &quot;maxWidth?&quot;">​</a></h5><blockquote><p><code>readonly</code> <code>optional</code> <strong>maxWidth</strong>: <code>string</code></p></blockquote><h5 id="widget" tabindex="-1">widget? <a class="header-anchor" href="#widget" aria-label="Permalink to &quot;widget?&quot;">​</a></h5><blockquote><p><code>readonly</code> <code>optional</code> <strong>widget</strong>: <a href="./../type-aliases/Widget.html"><code>Widget</code></a></p></blockquote><h5 id="width" tabindex="-1">width? <a class="header-anchor" href="#width" aria-label="Permalink to &quot;width?&quot;">​</a></h5><blockquote><p><code>readonly</code> <code>optional</code> <strong>width</strong>: <code>string</code></p></blockquote>',22)]))}const u=o(d,[["render",i]]);export{m as __pageData,u as default};
