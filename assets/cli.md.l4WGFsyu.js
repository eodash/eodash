import{c as e,m as s,F as h,G as p,p as r,a4 as l,o as i,t as o}from"./chunks/framework.DwvztmCA.js";const k=l('<h1 id="eodash-command-line-interface" tabindex="-1">Eodash Command Line Interface <a class="header-anchor" href="#eodash-command-line-interface" aria-label="Permalink to &quot;Eodash Command Line Interface&quot;">​</a></h1><p>eodash CLI is powered by <a href="https://vite.dev" target="_blank" rel="noreferrer">Vite</a>, providing an optimized development experience and producing minified ESM bundles for production.</p><h2 id="dev" tabindex="-1">dev <a class="header-anchor" href="#dev" aria-label="Permalink to &quot;dev&quot;">​</a></h2><p>Starts vite&#39;s dev server.</p><h3 id="usage" tabindex="-1">usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eodash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><h3 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options&quot;">​</a></h3>',7),g=s("tr",null,[s("th",null,"Option"),s("th",null,"Description")],-1),b=l('<h2 id="build" tabindex="-1">build <a class="header-anchor" href="#build" aria-label="Permalink to &quot;build&quot;">​</a></h2><p>Builds eodash for production</p><h3 id="usage-1" tabindex="-1">usage <a class="header-anchor" href="#usage-1" aria-label="Permalink to &quot;usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eodash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><h3 id="options-1" tabindex="-1">options <a class="header-anchor" href="#options-1" aria-label="Permalink to &quot;options&quot;">​</a></h3>',5),f=s("tr",null,[s("th",null,"Option"),s("th",null,"Description")],-1),E=l('<h2 id="preview" tabindex="-1">preview <a class="header-anchor" href="#preview" aria-label="Permalink to &quot;preview&quot;">​</a></h2><p>Locally preview the production build. This is not intended to be used for production.</p><h3 id="usage-2" tabindex="-1">usage <a class="header-anchor" href="#usage-2" aria-label="Permalink to &quot;usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eodash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> preview</span></span></code></pre></div><h3 id="options-2" tabindex="-1">options <a class="header-anchor" href="#options-2" aria-label="Permalink to &quot;options&quot;">​</a></h3>',5),_=s("tr",null,[s("th",null,"Option"),s("th",null,"Description")],-1),y=l(`<h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>While running the eodash command line, it automatically tries to locate a configuration file named <code>eodash.config.js</code> from the root folder of your project. You can also explicitly specify a config file to use with the <code>--config</code> or <code>-c</code> CLI option (resolved relative to your projects root folder). You can also override the configuration values using the CLI options. refer to the <a href="./api/bin/types/interfaces/EodashConfig.html">API</a> to learn more:</p><h3 id="eodash-config-js-basic-example" tabindex="-1"><code>eodash.config.js</code> Basic Example <a class="header-anchor" href="#eodash-config-js-basic-example" aria-label="Permalink to &quot;\`eodash.config.js\` Basic Example&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lib: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dev: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        port: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3333</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        open: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="integrate-your-ide-s-intellisense" tabindex="-1">Integrate your IDE’s intellisense <a class="header-anchor" href="#integrate-your-ide-s-intellisense" aria-label="Permalink to &quot;Integrate your IDE’s intellisense&quot;">​</a></h3><p>with eodash’s TypeScript typings using jsdoc hints</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {import(&quot;@eodash/eodash/config&quot;).EodashConfig}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Or using the <code>defineConfig</code> helper funtion</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@eodash/eodash/config&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div>`,9),D=JSON.parse('{"title":"Eodash Command Line Interface","description":"","frontmatter":{},"headers":[],"relativePath":"cli.md","filePath":"cli.md"}'),v={name:"cli.md"},q=Object.assign(v,{setup(m){const t={"-v, --version":"output the current version","--publicDir <path> ":"path to statically served assets folder","--no-publicDir":"do not serve static assets","--outDir <path>":"sets the minified output folder","-e, --entryPoint <path>":"file exporting `createEodash` ","-w, --widgets <path>":"folder that contains vue components as internal widgets","--cacheDir <path>":"set cache folder","-r, --runtime <path>":"file exporting eodash client runtime config","-b, --base <path>":"base public path","-p, --port <port>":"serving  port","-o, --open":"open default browser when the server starts","-c, --config <path>":"path to eodash server and build configuration file ","--host [IP address]":"specify which IP addresses the server should listen on","--no-host":"do not expose server to the network","-l, --lib":"builds and serves eodash as a web component","--no-lib":"builds and serves eodash as an SPA"},d=Object.keys(t).filter(n=>n!=="--outDir <path>"),c=Object.keys(t).filter(n=>!["--cacheDir <path>","-b, --base <path>","-p, --port <port>","-o, --open","--host [IP address]","--no-host"].includes(n)),u=Object.keys(t).filter(n=>["-v, --version","-b, --base <path>","-p, --port <port>","-o, --open","--host [IP address]","--no-host"].includes(n));return(n,C)=>(i(),e("div",null,[k,s("table",null,[g,(i(!0),e(h,null,p(r(d),a=>(i(),e("tr",null,[s("td",null,o(a),1),s("td",null,o(t[a]),1)]))),256))]),b,s("table",null,[f,(i(!0),e(h,null,p(r(c),a=>(i(),e("tr",null,[s("td",null,o(a),1),s("td",null,o(t[a]),1)]))),256))]),E,s("table",null,[_,(i(!0),e(h,null,p(r(u),a=>(i(),e("tr",null,[s("td",null,o(a),1),s("td",null,o(t[a]),1)]))),256))]),y]))}});export{D as __pageData,q as default};
