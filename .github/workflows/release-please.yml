on:
  push:
    branches:
      - main
permissions:
  contents: write
  pull-requests: write
name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Release Please! 🤖
        uses: googleapis/release-please-action@v4
        id: release
      - name: Checkout 🛎
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history and tags
      - name: Setup node env 🏗
        uses: actions/setup-node@v4
        with:
          node-version: 22
          check-latest: true
          registry-url: "https://registry.npmjs.org"
          cache: "npm"
      - name: Install dependencies 👨🏻‍💻
        run: npm ci --prefer-offline --no-audit
      - name: Publish package on NPM 📦
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        if: ${{ steps.release.outputs.release_created }}
      - name: Build and publish package 🚀
        run: |
          npx pkg-pr-new publish --comment=update
        if: ${{ !steps.release.outputs.release_created }}
      - name: Login to ghcr 🔧
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Pre-release tag 🏷️
        id: prerelease
        run: |
          TAG=$(node core/node/scripts/createPrereleaseTag.js)
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Generated prerelease tag: $TAG"
        if: ${{ !steps.release.outputs.release_created }}
      - name: Build SPA ⚙️
        run: npm run build
      - name: Build image 🔧
        run: |
          if [ "${{ steps.release.outputs.release_created }}" == "true" ]; then
            docker build -t ghcr.io/eodash/eodash:${{ steps.release.outputs.tag_name }} .
          else
            docker build -t ghcr.io/eodash/eodash:${{ steps.prerelease.outputs.tag }} .
          fi
      - name: Push ghcr 🚀
        run: |
          if [ "${{ steps.release.outputs.release_created }}" == "true" ]; then
            docker push ghcr.io/eodash/eodash:${{ steps.release.outputs.tag_name }}
          else
            docker push ghcr.io/eodash/eodash:${{ steps.prerelease.outputs.tag }}
          fi
